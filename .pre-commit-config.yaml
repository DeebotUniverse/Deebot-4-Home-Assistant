ci:
  skip:
    - mypy
    - pylint

default_language_version:
  python: python3.10

repos:
  - repo: https://github.com/asottile/pyupgrade
    rev: v3.4.0
    hooks:
      - id: pyupgrade
        args: [--py310-plus]
  - repo: https://github.com/psf/black
    rev: 23.3.0
    hooks:
      - id: black
        args:
          - --quiet
        <<: &python-files-with-tests
          files: ^((custom_components|tests)/.+)?[^/]+\.py$
  - repo: https://github.com/codespell-project/codespell
    rev: v2.2.4
    hooks:
      - id: codespell
        args:
          - --ignore-words-list=hass,deebot
          - --skip="./.*,*.csv,*.json"
          - --quiet-level=2
        exclude_types: [csv, json]
  - repo: https://github.com/PyCQA/flake8
    rev: 6.0.0
    hooks:
      - id: flake8
        additional_dependencies:
          - flake8-docstrings==1.6.0
          - pydocstyle==6.1.1
        <<: &python-files
          files: ^(custom_components/.+)?[^/]+\.py$
  - repo: https://github.com/PyCQA/bandit
    rev: 1.7.5
    hooks:
      - id: bandit
        args:
          - --quiet
          - --format=custom
          - --configfile=bandit.yaml
        <<: *python-files-with-tests
  - repo: https://github.com/PyCQA/isort
    rev: 5.12.0
    hooks:
      - id: isort
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.4.0
    hooks:
      - id: check-executables-have-shebangs
      - id: check-merge-conflict
      - id: detect-private-key
      - id: no-commit-to-branch
        args:
          - -b
          - dev
      - id: requirements-txt-fixer
      - id: mixed-line-ending
        args:
          - --fix=lf
        stages: [manual]
      - id: pretty-format-json
        args:
          - --autofix
          - --no-ensure-ascii
          - --top-keys=domain,name
        files: manifest\.json$
  - repo: https://github.com/pre-commit/mirrors-prettier
    rev: v3.0.0-alpha.9-for-vscode
    hooks:
      - id: prettier
        additional_dependencies:
          - prettier@2.7.1
          - prettier-plugin-sort-json@0.0.3
        exclude_types:
          - python
        exclude: manifest\.json$
  - repo: https://github.com/adrienverge/yamllint.git
    rev: v1.31.0
    hooks:
      - id: yamllint
  - repo: local
    hooks:
      # Run mypy through our wrapper script in order to get the possible
      # pyenv and/or virtualenv activated; it may not have been e.g. if
      # committing from a GUI tool that was not launched from an activated
      # shell.
      - id: mypy
        name: Check with mypy
        entry: scripts/run-in-env.sh mypy
        language: script
        types: [python]
        <<: *python-files
      - id: pylint
        name: Check with pylint
        entry: scripts/run-in-env.sh pylint
        language: script
        types: [python]
        <<: *python-files

  - repo: https://github.com/pre-commit-ci/pre-commit-ci-config
    rev: v1.5.1
    hooks:
      - id: check-pre-commit-ci-config

  - repo: https://github.com/python-jsonschema/check-jsonschema
    rev: 0.23.0
    hooks:
      - id: check-github-workflows
      - id: check-dependabot
      - id: check-jsonschema
        name: Check translations files
        files: ^custom_components/deebot/translations/
        types:
          - json
        args:
          - --schemafile
          - translations.schema.json
